name: Build and deploy

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    # strategy:
    #   matrix:
    #     node-version: [10.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: npm
      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            .next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-
      - name: Install dependencies
        run: npm ci 
      - name: Build with Next.js
        run: npx --no-install next build
      - name: Static HTML export with Next.js
        run: npx --no-install next export
      # - run: |
      #     npm ci \
      #     npx --no-install next build \
      #     npx --no-install next export
        # env:
        #   CI: true
      - name: Upload Artifact
        uses: actions/upload-artifact@master
        with:
          # name: build
          path: out
  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Download Artifact
        uses: actions/download-artifact@master
        with:
          path: out
      - name: Deploy to S3
        # with:
        #   args: --acl public-read --follow-symlinks --exclude '.git/*'
        env:
          # AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          # AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          # AWS_REGION: 'eu-west-2'   # optional: defaults to us-east-1
          # SOURCE_DIR: 'out'      # optional: defaults to entire repository
        run: |
          aws s3 cp \
          --recursive --acl public-read --follow-symlinks --delete --exclude '.git/*' \
          --region eu-west-2 \
          ./out s3://${{ secrets.AWS_S3_BUCKET }}